---
- name: Main | check if ca certificate exists
  ansible.builtin.stat:
    path: "{{ tls_ca_cert }}"
  register: ca_cert_file

- name: TLS | create temporary certificate directory
  ansible.builtin.file:
    path: "{{ tls_tmp_dir }}"
    state: directory
    mode: "0700"
  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true
  when: 
    - not skip_ca_cert_creation_tasks
    - not ca_cert_file.stat.exists

- name: TLS | create certificate directory
  ansible.builtin.file:
    path: "{{ tls_cert_dir }}"
    state: directory
    mode: "0755"
  become: true

- name: TLS | create CA private key with passphrase
  community.crypto.openssl_privatekey:
    path: "{{ tls_ca_key }}"
    passphrase: "{{ ca_passphrase }}"
    select_crypto_backend: cryptography
    type: RSA
    size: 4096
    cipher: auto
  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true
  when: 
    - not skip_ca_cert_creation_tasks
    - not ca_cert_file.stat.exists

- name: TLS | create CSR for CA certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ tls_ca_.key }}"
    privatekey_passphrase: "{{ ca_passphrase }}"
    country_name: "{{ tls_subj.country_name }}"
    state_or_province_name: "{{ tls_subj.state_or_province_name }}"
    organization_name: "{{ tls_subj.organization_name }}"
    common_name: "{{ tls_subj.common_name }}"
    email_address: "{{ tls_subj.email_address }}"
    use_common_name_for_san: false
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr
  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true
  when: 
    - not skip_ca_cert_creation_tasks
    - not ca_cert_file.stat.exists

- name: TLS | create CA certificate
  community.crypto.x509_certificate:
    path: "{{ tls_ca_cert }}"
    csr_content: "{{ ca_csr.csr }}"
    ownca_not_after: "+36500d"
    ownca_not_before: "+0s"
    privatekey_path: "{{ tls_ca_key }}"
    privatekey_passphrase: "{{ ca_passphrase }}"
    provider: selfsigned
  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true
  when: 
    - not skip_ca_cert_creation_tasks
    - not ca_cert_file.stat.exists

- name: TLS | get ca certificate from the first controller
  ansible.builtin.slurp:
    src: "{{ tls_ca_cert }}"
  register: c
  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true

- name: TLS | get ca private key from the first controller
  ansible.builtin.slurp:
    src: "{{ tls_ca_key }}"
  register: k
  become: true
  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true

- name: TLS | copy ca certificate and key to all nodes
  ansible.builtin.copy:
    content: "{{ item.content | b64decode }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "{{ item.mode }}"
  become: true
  loop:
    - {content: "{{ c.content }}", dest: "{{ tls_ca_cert }}", mode: "0644"}
    - {content: "{{ k.content }}", dest: "{{ tls_ca_key }}", mode: "0600"}
  when: inventory_hostname != groups['controller'][0]
  no_log: true
...
